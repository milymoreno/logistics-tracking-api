version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: tracking-postgres
    environment:
      POSTGRES_DB: tracking_db
      POSTGRES_USER: tracking_user
      POSTGRES_PASSWORD: tracking_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - tracking-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tracking_user -d tracking_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Adminer para administrar la base de datos (opcional)
  adminer:
    image: adminer:4.8.1
    container_name: tracking-adminer
    ports:
      - "8081:8080"
    networks:
      - tracking-network
    depends_on:
      - postgres
    restart: unless-stopped

  # HashiCorp Vault para manejo de secretos y JWT
  vault:
    image: hashicorp/vault:latest
    container_name: tracking-vault
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
      - ./vault-config:/vault/config
    command: vault server -dev -dev-root-token-id=myroot
    networks:
      - tracking-network
    healthcheck:
      test: ["CMD-SHELL", "vault status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  vault_data:
    driver: local

networks:
  tracking-network:
    driver: bridge